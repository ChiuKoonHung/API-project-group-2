{"version":3,"sources":["component/czy_Chart/czy_weather.js","component/czy_Chart/chart_1_view.js","component/Clam/clam-psi-j.js","API.js","component/czy_Chart/chart_2_view.js","component/ly-chart-4/ly_forecast.js","component/ly-chart-4/chart_4_view.js","component/justin_chart/justin_UVReading.js","component/justin_chart/chart_6_view.js","App.js","reportWebVitals.js","index.js"],"names":["refreshbutton","window","location","reload","WeatherCard","weatherData","className","name","Button","inverted","color","onClick","moment","format","weather","description","Math","round","main","temp","humidity","feels_like","wind","speed","Date","sys","sunrise","toLocaleTimeString","sunset","Weather","useState","data","setData","useEffect","fetchData","a","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","long","longitude","geoLocation","axios","get","process","then","res","Dimmer","active","Loader","baseURL","PSI","psi","setPsi","response","items","getReading","class","readings","psi_twenty_four_hourly","east","west","central","north","south","API","create","PM","pm","setPm","pm25_one_hourly","document","title","ShowForecast","massiveProps","dateToday","timeNow","forecast2h","dateTime","location2h","forecast24h","forecast1st","date1st","forecast2nd","date2nd","forecast3rd","date3rd","forecast4th","date4th","setAreaIndex","onChange","e","areaIndex","target","value","disabled","selected","Forecast","toLocaleDateString","setForecast2h","setLocation2h","setForecast24h","setNorth","setSouth","setEast","setWest","setCentral","setForecast1st","setDate1st","setForecast2nd","setDate2nd","setForecast3rd","setDate3rd","setForecast4th","setDate4th","getWeatherForecast","forecast4day","console","log","UltraVioletReadings","time","status","index","DisplayForecast","props","uvIndex","setUVIndex","uvTime","setUVTime","uvStatus","setUVStatus","fetchIndex","api_info","App","style","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.72305978.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./czy_weather.css\";\r\nimport moment from \"moment\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nconst refreshbutton = () => {\r\n    window.location.reload();\r\n};\r\n\r\nconst WeatherCard = ({ weatherData }) => (\r\n    <div className=\"main\">\r\n        <div className=\"top\">\r\n            <p className=\"header\">{weatherData.name}</p>\r\n            <Button className=\"button\" inverted color=\"blue\" onClick={refreshbutton}>\r\n                Refresh\r\n            </Button>\r\n        </div>\r\n        <div className=\"flex\">\r\n            <p className=\"day\">\r\n                {moment().format(\"dddd\")}, <span>{moment().format(\"LL\")}</span>\r\n            </p>\r\n            <p className=\"description\">{weatherData.weather[0].description}</p>\r\n        </div>\r\n        <div className=\"flex\">\r\n            <p className=\"temp\">Temprature: {Math.round((weatherData.main.temp - 272.15) * 100) / 100}&deg;C</p>\r\n            <p className=\"temp\">Humidity: {weatherData.main.humidity} %</p>\r\n        </div>\r\n        <div className=\"flex\">\r\n            <p className=\"temp\">Feels like: {Math.round((weatherData.main.feels_like - 272.15) * 100) / 100}&deg;C</p>\r\n            <p className=\"temp\">Wind speed: {weatherData.wind.speed} m/s</p>\r\n        </div>\r\n        <div className=\"flex\">\r\n            <p className=\"temp\">Sunrise: {new Date(weatherData.sys.sunrise * 1000).toLocaleTimeString(\"en-IN\")}</p>\r\n            <p className=\"temp\">Sunset: {new Date(weatherData.sys.sunset * 1000).toLocaleTimeString(\"en-IN\")}</p>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default WeatherCard;\r\n","// import \"./App.css\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport WeatherCard from \"./czy_weather\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\nexport default function Weather() {\r\n    const [data, setData] = useState([]);\r\n\r\n    //you tell React that your component needs to do something after render\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const geoLocation = await new Promise((resolve, reject) => {\r\n                navigator.geolocation.getCurrentPosition((position) => {\r\n                    const lat = position.coords.latitude;\r\n                    const long = position.coords.longitude;\r\n                    resolve({ lat, long });\r\n                });\r\n            });\r\n            // console.log(geoLocation);\r\n            await axios\r\n                .get(\r\n                    `${process.env.REACT_APP_API_URL}/weather/?lat=${geoLocation.lat}&lon=${geoLocation.long}&appid=${process.env.REACT_APP_API_KEY}`\r\n                )\r\n                .then((res) => {\r\n                    // console.log(res.data);\r\n                    setData(res.data);\r\n                });\r\n            // await fetch(\r\n            //     `${process.env.REACT_APP_API_URL}/weather/?lat=${geoLocation.lat}&lon=${geoLocation.long}&appid=${process.env.REACT_APP_API_KEY}`\r\n            // )\r\n            //     .then((res) => res.json()) //here comsume the value\r\n            //     .then((result) => {\r\n            //         //here set the result\r\n            //         setData(result);\r\n            //         console.log(result);\r\n            //     });\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            {typeof data.main != \"undefined\" ? (\r\n                <WeatherCard weatherData={data} />\r\n            ) : (\r\n                <div>\r\n                    <Dimmer active>\r\n                        <Loader>Loading..</Loader>\r\n                    </Dimmer>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\nimport \"./clam-psi.css\";\r\n\r\nconst baseURL = \"https:api.data.gov.sg/v1/environment/psi\";\r\n\r\nfunction PSI() {\r\n    const [psi, setPsi] = useState(null);\r\n    const [east, setEast] = useState(null);\r\n    const [west, setWest] = useState(null);\r\n    const [central, setCentral] = useState(null);\r\n    const [north, setNorth] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function getReading() {\r\n            await axios.get(baseURL).then((response) => {\r\n                setPsi(response.data.items[0]);\r\n            });\r\n        }\r\n        getReading();\r\n    }, []);\r\n\r\n    if (!psi) return null;\r\n\r\n    return (\r\n        <div>\r\n            {typeof psi != (\"undefined\" || null) ? (\r\n                <div className=\"PSI\">\r\n                    <div className=\"Main-container\">\r\n                        <div className=\"header\">\r\n                            <p>PSI Readings </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"Sub-container-1\">\r\n                        <ul>\r\n                            <p>East: {psi.readings.psi_twenty_four_hourly.east}</p>\r\n                            <p>West: {psi.readings.psi_twenty_four_hourly.west}</p>\r\n                            <p>Central: {psi.readings.psi_twenty_four_hourly.central}</p>\r\n                            <p>North: {psi.readings.psi_twenty_four_hourly.north}</p>\r\n                            <p>South: {psi.readings.psi_twenty_four_hourly.south}</p>\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <Dimmer active>\r\n                        <Loader>Loading..</Loader>\r\n                    </Dimmer>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PSI;\r\n","import axios from 'axios';\r\n\r\nconst API = axios.create({\r\n    baseURL:\"https://api.data.gov.sg/v1/environment/\"\r\n});\r\n\r\nexport default API;\r\n\r\n","// import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport API from \"../../API\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\nimport \"./czy_PM25.css\";\r\n\r\n// const baseURL = \"https://api.data.gov.sg/v1/environment/pm25\";\r\n\r\nexport default function PM() {\r\n    const [pm, setPm] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function getReading() {\r\n            await API.get(`/pm25`).then((response) => {\r\n                setPm(response.data.items[0]);\r\n                // console.log(\"pm return \", pm);\r\n            });\r\n        }\r\n        getReading();\r\n    }, []);\r\n\r\n    if (!pm) return null;\r\n\r\n    return (\r\n        <div>\r\n            {typeof pm != \"undefined\" ? (\r\n                <div className=\"PM25\">\r\n                    <div className=\"top-container\">\r\n                        <div className=\"header\">\r\n                            <p>PM2.5 readings </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bottom-container\">\r\n                        <ul>\r\n                            <p>East: {pm.readings.pm25_one_hourly.east}</p>\r\n                            <p>West: {pm.readings.pm25_one_hourly.west}</p>\r\n                            <p>Central: {pm.readings.pm25_one_hourly.central}</p>\r\n                            <p>North: {pm.readings.pm25_one_hourly.north}</p>\r\n                            <p>South: {pm.readings.pm25_one_hourly.south}</p>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <Dimmer active>\r\n                        <Loader>Loading..</Loader>\r\n                    </Dimmer>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./ly_forecast.css\";\r\nimport API from \"../../API\";\r\ndocument.title = \"Forecast App\";\r\n\r\n/*\r\n    This is your pure component.\r\n\r\n    In this component, it is possible to break into even smaller components. FOr example, in your widget there are 4 parts\r\n    1. 24 hour forecast\r\n    2. 24 hour forecast by region\r\n    3. 2 hour forecast by location\r\n    4. 4 day forecast islandwide\r\n\r\n    This <ShowForecast> component could have broken into 4 smaller components, then it will be rendered in chart_4_view.js \r\n\r\n    For now, I am breaking this up as first layer for you to have a sense of what is pure component. This component is now pure component, but not so reusable until you break it into 4.\r\n*/\r\nconst ShowForecast = ({massiveProps}) => {\r\n    const {dateToday, timeNow, dateTime, forecast2h, location2h, forecast24h, north, south, east, west, central, forecast1st, date1st, forecast2nd, date2nd, forecast3rd, date3rd, forecast4th, date4th, setAreaIndex} = massiveProps;    \r\n    \r\n    return (    \r\n    <div class = \"main-container\">\r\n        <div class>\r\n            <p>Today's date is {dateToday}. The time now is {timeNow}</p>\r\n            <h3>24 hour forecast (islandwide): {forecast24h}</h3>\r\n        </div>\r\n        <div class = \"section-divider\"></div> \r\n        <h3>24 hour forecast (by region)</h3>\r\n\r\n        <div class=\"forecast-container\">\r\n        <div class=\"item\"><b>North</b><br/>{north}</div>\r\n        <div class=\"item\"><b>South</b><br/>{south}</div>\r\n        <div class=\"item\"><b>East</b><br/>{east}</div>\r\n        </div> \r\n\r\n        <div class=\"forecast-container\">\r\n        <div class=\"item\"><b>West</b><br/>{west}</div>\r\n        <div class=\"item\"><b>Central</b><br/>{central}</div>\r\n        </div> \r\n\r\n        <div class = \"section-divider\"></div>\r\n\r\n        <h3>2 hour forecast (by location): {forecast2h}</h3>\r\n\r\n        <div class = \"forecast-container\">\r\n            <div class=\"item\">Location: {location2h}</div>    \r\n        </div>\r\n        <div class = \"list\">\r\n            <select onChange = {(e) =>{\r\n                let areaIndex = e.target.value;\r\n                setAreaIndex(areaIndex);  \r\n            }}>\r\n                <option disabled selected>Select Location</option>    \r\n                <option value=\"0\">Ang Mo Kio</option>\r\n                <option value=\"1\">Bedok</option>\r\n                <option value=\"2\">Bishan</option>\r\n                <option value=\"3\">Boon Lay</option>\r\n                <option value=\"4\">Bukit Batok</option>\r\n                <option value=\"9\">Changi</option>\r\n                <option value=\"14\">Hougang</option>\r\n                <option value=\"46\">Yishun</option>\r\n            </select>\r\n            {/* uncomment below to check index:*/}\r\n            {/* {areaIndex} */}\r\n        </div>\r\n        <br/>\r\n        <div class = \"section-divider\"></div>\r\n                \r\n        <h3>4 day forecast (islandwide)</h3>  \r\n\r\n        <div class = \"list\">\r\n        <p>{date1st}: {forecast1st}</p>\r\n        <p>{date2nd}: {forecast2nd}</p>\r\n        <p>{date3rd}: {forecast3rd}</p>\r\n        <p>{date4th}: {forecast4th}</p>\r\n        </div>\r\n\r\n    </div>     \r\n    )\r\n}\r\n\r\nexport default ShowForecast;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ShowForecast from \"./ly_forecast\";\r\nimport API from \"../../API\";\r\ndocument.title = \"Forecast App\";\r\n\r\nexport default function Forecast() {\r\n    \r\n    const dateToday = new Date().toLocaleDateString('en-CA');\r\n    const timeNow = new Date().toLocaleTimeString('en-GB');\r\n    const dateTime = (dateToday+\"T\"+timeNow);\r\n \r\n    const [forecast2h, setForecast2h] = useState([]);\r\n    const [location2h, setLocation2h] = useState([]);\r\n\r\n    const [forecast24h, setForecast24h] = useState([]);\r\n    const [north, setNorth] = useState([]);\r\n    const [south, setSouth] = useState([]);\r\n    const [east, setEast] = useState([]);\r\n    const [west, setWest] = useState([]);\r\n    const [central, setCentral] = useState([]);\r\n\r\n    const [forecast1st, setForecast1st] = useState([]);\r\n    const [date1st, setDate1st] = useState([]);\r\n\r\n    const [forecast2nd, setForecast2nd] = useState([]);\r\n    const [date2nd, setDate2nd] = useState([]);\r\n\r\n    const [forecast3rd, setForecast3rd] = useState([]);\r\n    const [date3rd, setDate3rd] = useState([]);\r\n\r\n    const [forecast4th, setForecast4th] = useState([]);\r\n    const [date4th, setDate4th] = useState([]);\r\n    const [areaIndex, setAreaIndex] = useState(\"0\"); \r\n\r\n    useEffect(()=>{\r\n        \r\n        const getWeatherForecast = async (e) =>{\r\n\r\n        try {\r\n\r\n            const forecast2h = await API.get(`2-hour-weather-forecast?date_time=${dateTime}`);\r\n            const forecast24h = await API.get(`24-hour-weather-forecast?date=${dateToday}`); \r\n            const forecast4day = await API.get(`4-day-weather-forecast?date=${dateToday}`);  \r\n\r\n            setLocation2h(forecast2h.data.items[0][\"forecasts\"][areaIndex][\"area\"]);\r\n            setForecast2h(forecast2h.data.items[0][\"forecasts\"][areaIndex][\"forecast\"]);\r\n\r\n            setForecast24h(forecast24h.data.items[0][\"general\"][\"forecast\"]);\r\n            setNorth(forecast24h.data.items[0][\"periods\"][0][\"regions\"][\"north\"]);\r\n            setSouth(forecast24h.data.items[0][\"periods\"][0][\"regions\"][\"south\"]);\r\n            setEast(forecast24h.data.items[0][\"periods\"][0][\"regions\"][\"east\"]);\r\n            setWest(forecast24h.data.items[0][\"periods\"][0][\"regions\"][\"west\"]);\r\n            setCentral(forecast24h.data.items[0][\"periods\"][0][\"regions\"][\"central\"]);\r\n\r\n            setForecast1st(forecast4day.data.items[0][\"forecasts\"][0][\"forecast\"]);\r\n            setDate1st(forecast4day.data.items[0][\"forecasts\"][0][\"date\"]);\r\n\r\n            setForecast2nd(forecast4day.data.items[0][\"forecasts\"][1][\"forecast\"]);\r\n            setDate2nd(forecast4day.data.items[0][\"forecasts\"][1][\"date\"]);\r\n\r\n            setForecast3rd(forecast4day.data.items[0][\"forecasts\"][2][\"forecast\"]);\r\n            setDate3rd(forecast4day.data.items[0][\"forecasts\"][2][\"date\"]);\r\n            \r\n            setForecast4th(forecast4day.data.items[0][\"forecasts\"][3][\"forecast\"]);\r\n            setDate4th(forecast4day.data.items[0][\"forecasts\"][3][\"date\"]);\r\n\r\n        } catch(err){\r\n            console.log(err);\r\n        }    \r\n    }\r\n\r\n    getWeatherForecast();\r\n    \r\n    },[forecast2h, areaIndex])\r\n    //putting areaIndex in [] allows react to check for updates to areaIndex and update data accordingly (location and forecast)\r\n\r\n    return <ShowForecast massiveProps={{dateToday, timeNow, dateTime, forecast2h, location2h, forecast24h, north, south, east, west, central, forecast1st, date1st, forecast2nd, date2nd, forecast3rd, date3rd, forecast4th, date4th, setAreaIndex}} />\r\n\r\n}","\r\nimport './justin_UVReading.css';\r\nimport moment from 'moment';\r\nconst format1 = \"MMMM Do YYYY, HH:mm:ss a\"\r\n\r\n/*\r\n    This is the pure component. It doesn't fetch any data but render it from what are given from props.\r\n*/\r\nfunction UltraVioletReadings({time, status, index}) {\r\n    \r\n    return (\r\n        <>\r\n            <div className='dateTime'>\r\n            {/* // display date & time  */}\r\n             <p className='status-check'>Hourly update as of:</p><p className='status-remarks'>~ {moment(time).format(format1, true)}</p>\r\n            </div>\r\n            <hr />\r\n            <div className='status'>\r\n            {/* // set condition for UV status.  */}\r\n            { status === \"healthy\" ? \r\n            <>\r\n            <p className='status-check'>Status: {status}</p><p className='status-remarks'>~ Safe to go out</p>\r\n            </> :\r\n            <>\r\n            <p className='status-check'>Status: {status}</p><p className='status-remarks'>~ Avoid going out!</p>\r\n            </>}\r\n            </div>\r\n            <hr />\r\n            <div className='index'>\r\n            {/* // set condition for UV index.  */}\r\n            { index >= 6 ? \r\n            <>\r\n             <p className='index-display'>Ultra-violet Index: {index}</p><p className='index-remarks'>~ Remember to apply sunscreen and wear sunglasses when going out!</p>\r\n            </> :\r\n            <>\r\n            <p className='index-display'>Ultra-violet Index: {index}</p><p className='index-remarks'>~ Index is currently low/moderate</p>\r\n            </>}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UltraVioletReadings; \r\n\r\n","import React, {useState, useEffect} from \"react\";\r\nimport UltraVioletReadings from \"./justin_UVReading.js\";\r\nimport './justin_UVReading.css';\r\nimport API from \"../../API.js\";\r\n\r\nfunction DisplayForecast(props) {\r\n\r\n  const [uvIndex, setUVIndex] = useState(null);\r\n    const [uvTime, setUVTime] = useState(null);\r\n    const [uvStatus, setUVStatus] = useState(null);\r\n    \r\n    const dateToday = new Date().toLocaleDateString('en-CA');\r\n    const timeNow = new Date().toLocaleTimeString('en-GB');\r\n    const dateTime = (dateToday+\"T\"+timeNow);\r\n\r\n    useEffect(() => {\r\n        const fetchIndex = async (e) => {\r\n        try {\r\n            const response = await API.get(`/uv-index?date_time=${dateTime}`);\r\n            setUVIndex(response.data.items[0].index[0][\"value\"]);  \r\n            setUVTime(response.data.items[0].index[0][\"timestamp\"]);\r\n            setUVStatus(response.data.api_info.status);\r\n        } catch(err){\r\n            console.log(err);\r\n        }\r\n        }\r\n        fetchIndex();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        <div className='readings-container'>\r\n          <h3 className='heading'>Ultra-Violet Index & Status update</h3>\r\n          <hr />\r\n          <UltraVioletReadings time={uvTime} status={uvStatus} index={uvIndex} />\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DisplayForecast;","import \"./App.css\";\r\nimport Weather from \"./component/czy_Chart/chart_1_view\";\r\nimport PSI from \"./component/Clam/clam-psi-j\";\r\nimport PM from \"./component/czy_Chart/chart_2_view\";\r\nimport Forecast from \"./component/ly-chart-4/chart_4_view\";\r\nimport DisplayForecast from \"./component/justin_chart/chart_6_view\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <h1 style={{ color: \"white\" }}>Weather information in Singapore</h1>\r\n            < div className=\"container\">\r\n                <div className=\"chart\">\r\n                    <Weather />\r\n                </div>\r\n                <div className=\"chart\">\r\n                    <PM />\r\n                </div>\r\n\r\n                <div className=\"chart\">\r\n                    <Forecast />\r\n                </div>\r\n                <div className=\"chart\">\r\n                    <PSI />\r\n                </div>\r\n                <div className=\"chart\">\r\n                    <DisplayForecast />\r\n                </div>\r\n  \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}